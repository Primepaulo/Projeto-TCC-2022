@model Projeto_TCC_2022.Models.Serviço

<div class="modal-dialog">
    <div class="modal-content">
        <div class="modal-header">
            <h1 class="modal-title fs-5">Editar Serviço</h1>
            <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
        </div>
        @using (Html.BeginForm("EditarServiço", "Serviços", FormMethod.Post))
        {
            <div class="modal-body pt-0">
                <h5 class="smallHeader mt-3">Nome</h5>
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })


                @Html.LabelFor(model => model.Categoria, htmlAttributes: new { @class = "control-label col-md-2" })
                <div>
                    <select for="categoria" name="categoria" id="categoria">
                        @foreach (var item in ViewBag.Categorias)
                        {
                            <option value="@item.Nome"
                                    @if (item.Id == ViewBag.sCategoria.Id) { @: selected="selected"
                                    }>
                                @item.Nome
                            </option>
                        }
                    </select>
                </div>

                @{
                    var valorMin = "R$ " + Convert.ToDecimal(Model.PreçoMin).ToString("F");
                    var valorMax = "R$ " + Convert.ToDecimal(Model.PreçoMax).ToString("F");

                    if (valorMin == "R$ 0,00")
                    {
                        valorMin = "";
                    }
                    if (valorMax == "R$ 0,00")
                    {
                        valorMax = "";
                    }
                }

                <h5 class="smallHeader mt-3">Preço Mínimo</h5>
                <input class="form-control text-box single-line" data-val="true" data-val-regex-pattern="^(\d){1,4}(\.\d{1,3})*(,\d{1,4})*$" data-val-regex="Valor Inválido." id="PreçoMin" name="PreçoMin" type="text" value="@valorMin">
                @Html.ValidationMessageFor(model => model.PreçoMin, "", new { @class = "text-danger" })

                <h5 class="smallHeader mt-3">Preço Máximo</h5>
                <input class="form-control text-box single-line" data-val="true" data-val-regex-pattern="^(\d){1,4}(\.\d{1,3})*(,\d{1,4})*$" data-val-regex="Valor Inválido." id="PreçoMax" name="PreçoMax" type="text" value="@valorMax">
                @Html.ValidationMessageFor(model => model.PreçoMax, "", new { @class = "text-danger" })


                <h5 class="smallHeader mt-3">Descrição</h5>
                <textarea class="form-control" id="Descrição" name="Descrição" style="height: 100px">@Model.Descrição</textarea>
                @Html.ValidationMessageFor(model => model.Descrição, "", new { @class = "text-danger" })


                @Html.HiddenFor(e => e.Id)
                @Html.HiddenFor(model => model.Fk_Oficina_Id)

                <div class="text-center mt-4">
                    <button type="submit" class="btn btn-primary">Confirmar</button>
                </div>
            </div>
        }
    </div>
</div>