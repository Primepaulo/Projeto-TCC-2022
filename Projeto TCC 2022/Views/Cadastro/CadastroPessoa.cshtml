@model Projeto_TCC_2022.Models.Pessoa

<h2>Adicionar Pessoa Física</h2>


@using (Html.BeginForm("CadastrarPessoa", "Cadastro", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Pessoa</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control", name = "Nome", @id = "Nome" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sobrenome, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sobrenome, new { htmlAttributes = new { @class = "form-control", name = "Sobrenome", @id = "Sobrenome" } })
                @Html.ValidationMessageFor(model => model.Sobrenome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control", name = "Estado", @id = "Estado" } })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control", name = "Cidade", @id = "Cidade" } })
                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rua, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rua, new { htmlAttributes = new { @class = "form-control", name = "Rua", @id = "Rua" } })
                @Html.ValidationMessageFor(model => model.Rua, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Número, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Número, new { htmlAttributes = new { @class = "form-control", name = "Número", @id = "Número" } })
                @Html.ValidationMessageFor(model => model.Número, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control", name = "Complemento", @id = "Complemento" } })
                @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
            </div>
        </div>

        <input type="radio" id="física" name="Tipo" value="1" onchange="exibir()">
        <label for="física">Pessoa Física</label><br>

        <input type="radio" id="jurídica" name="Tipo" value="2" onchange="exibir()">
        <label for="jurídica">Pessoa Jurídica</label><br>

        <div class="form-group d-none" id="textCPF">
            @Html.LabelFor(model => model.CPF, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CPF, new { htmlAttributes = new { @class = "form-control", name = "CPF", @id = "CPF", maxlength = 14, @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.CPF, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group d-none" id="textCNPJ">
            @Html.LabelFor(model => model.CNPJ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CNPJ, new { htmlAttributes = new { @class = "form-control", name = "CNPJ", @id = "CNPJ", maxlength = 18, @autocomplete = "off" } })
                @Html.ValidationMessageFor(model => model.CNPJ, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}


@section scripts {
    <script>
        let inputCPF = $("#CPF")

        inputCPF.on("keypress", function(){
            let inputLength = inputCPF.val().length;

            if (inputLength === 3 || inputLength === 7) {
                inputCPF.val(inputCPF.val() + ".")
            }

            else if (inputLength === 11) {
                inputCPF.val(inputCPF.val() + "-")
            }
        })

        let inputCNPJ = $("#CNPJ")
        inputCNPJ.on("keypress", function () {
            let inputLength = inputCNPJ.val().length;
            if (inputLength === 2 || inputLength === 6) {
                inputCNPJ.val(inputCNPJ.val() + ".");
            }
            else if (inputLength === 10) {
                inputCNPJ.val(inputCNPJ.val() + "/");
            }
            else if (inputLength === 16) {
                inputCNPJ.val(inputCNPJ.val() + "-");
            }
        })


        function exibir() {

            if ($("#física").is(":checked")) {
                $("#textCPF").removeClass("d-none");
                if (!$("#textCNPJ").hasClass("d-none")) {
                    $("#textCNPJ").addClass("d-none");
                }
            }
            else if ($("#jurídica").is(":checked")) {
                $("#textCNPJ").removeClass("d-none");
                if (!$("#textCPF").hasClass("d-none")) {
                    $("#textCPF").addClass("d-none");
                }
            }
        }

    </script>
}
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
