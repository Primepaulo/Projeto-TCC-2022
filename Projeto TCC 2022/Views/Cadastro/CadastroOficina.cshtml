@model Projeto_TCC_2022.Models.Oficina

@{
    ViewBag.Title = "View";
}

<h2>View</h2>

@using (Html.BeginForm("CadastrarOficina", "Cadastro", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Oficina</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.CNPJ, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" class="form-control" id="CNPJ" name="CNPJ" maxlength="18" autocomplete="off" required="required" />
                @Html.ValidationMessageFor(model => model.CNPJ, "", new { @class = "text-danger" })
            </div>
        </div>

        @*Razão Social*@
        <div class="form-group">
            <label for="Nome" class="control-label col-md-2">Nome da Oficina</label>
            <div class="col-md-10">
                @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Estado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Estado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Estado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Cidade, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Cidade, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Cidade, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Bairro, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Bairro, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Bairro, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.Rua, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Rua, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Rua, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Número, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Número, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Número, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Complemento, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Complemento, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Complemento, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descrição, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descrição, new { @class = "form-control", @rows = "4" })
                @Html.ValidationMessageFor(model => model.Descrição, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="AceitaImportado" class="control-label col-md-2">Aceita Importado?</label>
            <div class="col-md-10">
                @Html.CheckBoxFor(model => model.AceitaImportado)
                @Html.ValidationMessageFor(model => model.AceitaImportado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label for="intervalo" class="control-label col-md-2">Horário de Funcionamento: </label>
            <div class="col-md-10 mt-3">
                <input id="inicio" name="inicio" type="text" value="" class="timepicker" /> <span class="ms-2 me-2"> Até</span>
                <input id="fim" name="fim" type="text" value="" class="timepicker" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section scripts
    {
    <script>

        $(document).ready(function () {
            let inputCNPJ = $("#CNPJ")
            inputCNPJ.on("keypress", function () {
                let inputLength = inputCNPJ.val().length;
                if (inputLength === 2 || inputLength === 6) {
                    inputCNPJ.val(inputCNPJ.val() + ".");
                }
                else if (inputLength === 10) {
                    inputCNPJ.val(inputCNPJ.val() + "/");
                }
                else if (inputLength === 16) {
                    inputCNPJ.val(inputCNPJ.val() + "-");
                }
            })

            $('.timepicker').timepicker({
                timeFormat: 'HH:mm',
                dynamic: false,
                dropdown: false,
                scrollbar: false
            });
        });
    </script>

    @Scripts.Render("~/bundles/jqueryval")
}



<div>
    @Html.ActionLink("Back to List", "Index")
</div>
