@model Projeto_TCC_2022.Models.ViewModels.Page

<div class="row">
    <div class="col-md-6 d-flex">
        @if (Model.Imagem != null)
        {
        <img class="rounded-circle my-auto d-inline-block" style="height: 150px;" src="@Model.Imagem.Url">
        }
        <h3 class="d-inline-block my-auto ms-3">@Model.Oficina.Nome</h3>

        @{ 
            double Média = Model.Média_Geral;
            if (Double.IsNaN(Média) == true)
            {
                Média = 0.0;
            }
        }

        <span class="ms-2 my-auto"><i class="bi bi-star-fill" style="color: #FFBF00;"></i>   <Strong>@Média</Strong></span>
    </div>

    <div class="col-md-2 offset-md-4 d-flex">
        <a href="#" class="navbar-toggler my-auto" data-bs-toggle="offcanvas" data-bs-target="#detalhes">Ver Detalhes</a>
    </div>

    <div class="offcanvas offcanvas-end" data-bs-backdrop="false" data-bs-scroll="true" tabindex="-1" id="detalhes">

        <div class="offcanvas-header">
            <button type="button" class="btn-close " data-bs-dismiss="offcanvas"></button>
            <div class="text-center mx-auto mt-3">
                <h6 class="offcanvas-title">Sobre</h6>
            </div>
        </div>

        <div class="offcanvas-body">

            <div>
                <h6>Descrição</h6>
                <p>@Model.Oficina.Descrição</p>
            </div>

            <div>
                <h6 class="mt-3">Endereço</h6>
                <p>@Model.Oficina.Rua, @Model.Oficina.Número - @Model.Oficina.Bairro</p>
                <p>@Model.Oficina.Cidade - @Model.Oficina.Estado</p>
                <p>CEP: @Model.Oficina.CEP</p>
            </div>

            @{ 
                string Importado;
                if (Model.Oficina.AceitaImportado == true)
                {
                    Importado = "Sim";
                }
                else
                {
                    Importado = "Não";
                }
            }

        <div>
            @{
                System.Text.StringBuilder String = new System.Text.StringBuilder(Model.Oficina.HorarioFuncionamento);
                String.Replace("/", " - ");
                <h6 class="mt-3">Horário de Funcionamento: </h6>
                <h6 class="smallHeader">@String.ToString()</h6>
            }
        </div>

            <div class="mt-3">
                <h6>Outras Informações</h6>

                <h6 class="bigHeader d-inline-block">CNPJ: </h6>
                <span class="text">@Model.Oficina.CNPJ</span>

                <br />
                <h6 class="bigHeader d-inline-block mt-3">Email: </h6>
                <span class="text">
                    @Model.Email
                </span>

                <br />
                <h6 class="bigHeader d-inline-block mt-3">Aceita Importado: </h6>
                <span class="text">
                    @Importado
                </span>
                
                @if (Model.Cel.Count() != 0 && Model.Cel != null)
                {
                    <h6 class="mt-3">Números:</h6>

                    foreach (var item in Model.Cel)
                    {
                        <span class="text">@item.CelularTelefone1</span>
                        <br />
                    }
                }

            </div>
        </div>
    </div>
</div>

<h3 class="mt-4 mb-3">Agendar</h3>

<div class="row">
    <div class="col-md-6 text-end">
        <a 
           @if (ViewBag.éPessoa == true) 
           {
                   <text>href = "@Url.Action("EscolhaCarro", "Orçamento", new { Id = Model.Oficina.Id, Value = false })"</text>
           }
           @if (ViewBag.éPessoa != true)
           {
                <text>href = "#"</text>
           }
           class="btn btn-primary me-3">Agendar Análise</a>
    </div>
    <div class="col-md-6 text-start">
        <a 
           @if (ViewBag.éPessoa == true) 
            {
                   <text>href = "@Url.Action("EscolhaCarro", "Orçamento", new { Id = Model.Oficina.Id, Value = true })"</text>
            }
           @if (ViewBag.éPessoa != true)
           {
                <text>href = "#"</text>
           }
           class="btn btn-primary me-3">Agendar Análise</a>
    </div>
</div>

<h3 class="mt-3">Serviços</h3>

<div class="row mx-auto mt-4">
    @for (int i = 0; i < Model.Serviços.Count(); i++)
    {
        if (i > 0 && i % 2 == 0)
        {
            @:</div><div class="row mx-auto mt-4">
        }
        <div class=" ps-0 col-md-6 col-sm-12">
            <div class="card">
                <div class="card-body pb-1">
                    <h4 class="card-title bigHeader">@Model.Serviços[i].Nome</h4>
                    <div class="mt-3">
                        <h5 class="card-title" style="display: inline-block">Preço:</h5>
                        <span class="card-text" style="display: inline-block">R$ @Convert.ToDecimal(Model.Serviços[i].PreçoMin).ToString("F") - R$ @Convert.ToDecimal(Model.Serviços[i].PreçoMax).ToString("F")</span>
                    </div>

                    @{ 
                        double Av = Model.Av.Where(e => e.Fk_Serviço_Id == Model.Serviços[i].Id).SingleOrDefault().Média;

                        if (Double.IsNaN(Av) == true)
                        {
                            Av = 0.0;
                        }
                    } 

                    <div class="d-flex mt-2">
                        <h5 class="d-inline-block my-auto">Avaliação:</h5>
                        <span class="ms-2 my-auto"><i class="bi bi-star-fill" style="color: #FFBF00;"></i>   <Strong>@Av</Strong></span>
                    </div>
                </div>
                <div class="card-body pt-1 mt-2">
                    <h5 class="card-title">Descrição:</h5>
                    <p class="card-text text">@Model.Serviços[i].Descrição</p>
                </div>
            </div>
        </div>
    }
    
</div>