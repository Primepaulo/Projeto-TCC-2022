@model Projeto_TCC_2022.Models.Peça

@{
    ViewBag.Title = "EditarPeça";
}

<h2>EditarPeça</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">
    <h4>Peça</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Id)
    @Html.HiddenFor(model => model.Fk_Oficina_Id)

    <div class="form-group">
        @Html.LabelFor(model => model.Nome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Nome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Nome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="PreçoMin">Preço Min.:</label>
        <div class="col-md-10">
            <input class="form-control text-box single-line" data-val="true" data-val-regex-pattern="^(\d){1,3}(\.\d{1,3})*(,\d{1,4})*$" data-val-regex="Valor Inválido." id="PreçoMin" name="PreçoMin" type="text" value="@Model.PreçoMin">
            @Html.ValidationMessageFor(model => model.PreçoMin, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <label class="control-label col-md-2" for="PreçoMax">Preço Max.:</label>
        <div class="col-md-10">
            <input class="form-control text-box single-line" data-val="true" data-val-regex-pattern="^(\d){1,3}(\.\d{1,3})*(,\d{1,4})*$" data-val-regex="Valor Inválido." id="PreçoMax" name="PreçoMax" type="text" value="@Model.PreçoMax">
            @Html.ValidationMessageFor(model => model.PreçoMax, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        @Html.LabelFor(model => model.Marca, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Marca, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Marca, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Descrição, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Descrição, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Descrição, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Código, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Código, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Código, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Retornar", "VisualizarPeças")
</div>
